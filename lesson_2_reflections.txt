What happens when you initialize a repository? Why do you need to do it?

  Git creates a repository file in the folder, this has to be done to set up
  Git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area offers a mid way between the working directory and the
  repository, giving you greater control over your commits and improving
  the organization of your repository and commits.
  Def Working Directory - the original directory of files
  Def Repository - the git repository
  Def Staging Area - the mid way between the previous 2

How can you use the staging area to make sure you have one commit per logical
change?

  By using git diff, you can see the changes added in the staging area and thus
  ensure that before you commit, you are committing only the changes that make
  sense to add in the commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  Branches are useful when trying something out when you still wish to maintain
  a version that you already have working. Branches allow you to experiment with
  new code, without making it difficult to switch between versions of your code.

How do the diagrams help you visualize the branch structure?

  The diagrams help to remind you that you can make non-linear commits, and as
  a result can lose the ability to find commits if you don't turn them into
  branches, since git log won't allow them to appear.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  Merging the branches together combines the commits into the merged branch,
  organizing them by time stamp. Commits only recognize their parents, thus
  the diagram organization.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
